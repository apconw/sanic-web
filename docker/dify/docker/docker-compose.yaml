# ==================================================================
# WARNING: This file is auto-generated by generate_docker_compose
# Do not modify this file directly. Instead, update the .env.example
# or docker-compose-template.yaml and regenerate this file.
# ==================================================================

x-shared-env: &shared-api-worker-env
  CONSOLE_API_URL: ${CONSOLE_API_URL:-***REMOVED***
  CONSOLE_WEB_URL: ${CONSOLE_WEB_URL:-***REMOVED***
  SERVICE_API_URL: ${SERVICE_API_URL:-***REMOVED***
  APP_API_URL: ${APP_API_URL:-***REMOVED***
  APP_WEB_URL: ${APP_WEB_URL:-***REMOVED***
  FILES_URL: ${FILES_URL:-***REMOVED***
  LOG_LEVEL: ${LOG_LEVEL:-INFO***REMOVED***
  LOG_FILE: ${LOG_FILE:-/app/logs/server.log***REMOVED***
  LOG_FILE_MAX_SIZE: ${LOG_FILE_MAX_SIZE:-20***REMOVED***
  LOG_FILE_BACKUP_COUNT: ${LOG_FILE_BACKUP_COUNT:-5***REMOVED***
  LOG_DATEFORMAT: ${LOG_DATEFORMAT:-%Y-%m-%d %H:%M:%S***REMOVED***
  LOG_TZ: ${LOG_TZ:-UTC***REMOVED***
  DEBUG: ${DEBUG:-false***REMOVED***
  FLASK_DEBUG: ${FLASK_DEBUG:-false***REMOVED***
  SECRET_KEY: ${SECRET_KEY:-sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U***REMOVED***
  INIT_PASSWORD: ${INIT_PASSWORD:-***REMOVED***
  DEPLOY_ENV: ${DEPLOY_ENV:-PRODUCTION***REMOVED***
  CHECK_UPDATE_URL: ${CHECK_UPDATE_URL:-https://updates.dify.ai***REMOVED***
  OPENAI_API_BASE: ${OPENAI_API_BASE:-https://api.openai.com/v1***REMOVED***
  MIGRATION_ENABLED: ${MIGRATION_ENABLED:-true***REMOVED***
  FILES_ACCESS_TIMEOUT: ${FILES_ACCESS_TIMEOUT:-300***REMOVED***
  ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-60***REMOVED***
  REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-30***REMOVED***
  APP_MAX_ACTIVE_REQUESTS: ${APP_MAX_ACTIVE_REQUESTS:-0***REMOVED***
  APP_MAX_EXECUTION_TIME: ${APP_MAX_EXECUTION_TIME:-1200***REMOVED***
  DIFY_BIND_ADDRESS: ${DIFY_BIND_ADDRESS:-0.0.0.0***REMOVED***
  DIFY_PORT: ${DIFY_PORT:-5001***REMOVED***
  SERVER_WORKER_AMOUNT: ${SERVER_WORKER_AMOUNT:-1***REMOVED***
  SERVER_WORKER_CLASS: ${SERVER_WORKER_CLASS:-gevent***REMOVED***
  SERVER_WORKER_CONNECTIONS: ${SERVER_WORKER_CONNECTIONS:-10***REMOVED***
  CELERY_WORKER_CLASS: ${CELERY_WORKER_CLASS:-***REMOVED***
  GUNICORN_TIMEOUT: ${GUNICORN_TIMEOUT:-360***REMOVED***
  CELERY_WORKER_AMOUNT: ${CELERY_WORKER_AMOUNT:-***REMOVED***
  CELERY_AUTO_SCALE: ${CELERY_AUTO_SCALE:-false***REMOVED***
  CELERY_MAX_WORKERS: ${CELERY_MAX_WORKERS:-***REMOVED***
  CELERY_MIN_WORKERS: ${CELERY_MIN_WORKERS:-***REMOVED***
  API_TOOL_DEFAULT_CONNECT_TIMEOUT: ${API_TOOL_DEFAULT_CONNECT_TIMEOUT:-10***REMOVED***
  API_TOOL_DEFAULT_READ_TIMEOUT: ${API_TOOL_DEFAULT_READ_TIMEOUT:-60***REMOVED***
  DB_USERNAME: ${DB_USERNAME:-postgres***REMOVED***
  DB_PASSWORD: ${DB_PASSWORD:-difyai123456***REMOVED***
  DB_HOST: ${DB_HOST:-db***REMOVED***
  DB_PORT: ${DB_PORT:-5432***REMOVED***
  DB_DATABASE: ${DB_DATABASE:-dify***REMOVED***
  SQLALCHEMY_POOL_SIZE: ${SQLALCHEMY_POOL_SIZE:-30***REMOVED***
  SQLALCHEMY_POOL_RECYCLE: ${SQLALCHEMY_POOL_RECYCLE:-3600***REMOVED***
  SQLALCHEMY_ECHO: ${SQLALCHEMY_ECHO:-false***REMOVED***
  POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS:-100***REMOVED***
  POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-128MB***REMOVED***
  POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM:-4MB***REMOVED***
  POSTGRES_MAINTENANCE_WORK_MEM: ${POSTGRES_MAINTENANCE_WORK_MEM:-64MB***REMOVED***
  POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE:-4096MB***REMOVED***
  REDIS_HOST: ${REDIS_HOST:-redis***REMOVED***
  REDIS_PORT: ${REDIS_PORT:-6379***REMOVED***
  REDIS_USERNAME: ${REDIS_USERNAME:-***REMOVED***
  REDIS_PASSWORD: ${REDIS_PASSWORD:-difyai123456***REMOVED***
  REDIS_USE_SSL: ${REDIS_USE_SSL:-false***REMOVED***
  REDIS_DB: ${REDIS_DB:-0***REMOVED***
  REDIS_USE_SENTINEL: ${REDIS_USE_SENTINEL:-false***REMOVED***
  REDIS_SENTINELS: ${REDIS_SENTINELS:-***REMOVED***
  REDIS_SENTINEL_SERVICE_NAME: ${REDIS_SENTINEL_SERVICE_NAME:-***REMOVED***
  REDIS_SENTINEL_USERNAME: ${REDIS_SENTINEL_USERNAME:-***REMOVED***
  REDIS_SENTINEL_PASSWORD: ${REDIS_SENTINEL_PASSWORD:-***REMOVED***
  REDIS_SENTINEL_SOCKET_TIMEOUT: ${REDIS_SENTINEL_SOCKET_TIMEOUT:-0.1***REMOVED***
  REDIS_USE_CLUSTERS: ${REDIS_USE_CLUSTERS:-false***REMOVED***
  REDIS_CLUSTERS: ${REDIS_CLUSTERS:-***REMOVED***
  REDIS_CLUSTERS_PASSWORD: ${REDIS_CLUSTERS_PASSWORD:-***REMOVED***
  CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://:difyai123456@redis:6379/1***REMOVED***
  BROKER_USE_SSL: ${BROKER_USE_SSL:-false***REMOVED***
  CELERY_USE_SENTINEL: ${CELERY_USE_SENTINEL:-false***REMOVED***
  CELERY_SENTINEL_MASTER_NAME: ${CELERY_SENTINEL_MASTER_NAME:-***REMOVED***
  CELERY_SENTINEL_SOCKET_TIMEOUT: ${CELERY_SENTINEL_SOCKET_TIMEOUT:-0.1***REMOVED***
  WEB_API_CORS_ALLOW_ORIGINS: ${WEB_API_CORS_ALLOW_ORIGINS:-****REMOVED***
  CONSOLE_CORS_ALLOW_ORIGINS: ${CONSOLE_CORS_ALLOW_ORIGINS:-****REMOVED***
  STORAGE_TYPE: ${STORAGE_TYPE:-opendal***REMOVED***
  OPENDAL_SCHEME: ${OPENDAL_SCHEME:-fs***REMOVED***
  OPENDAL_FS_ROOT: ${OPENDAL_FS_ROOT:-storage***REMOVED***
  S3_ENDPOINT: ${S3_ENDPOINT:-***REMOVED***
  S3_REGION: ${S3_REGION:-us-east-1***REMOVED***
  S3_BUCKET_NAME: ${S3_BUCKET_NAME:-difyai***REMOVED***
  S3_ACCESS_KEY: ${S3_ACCESS_KEY:-***REMOVED***
  S3_SECRET_KEY: ${S3_SECRET_KEY:-***REMOVED***
  S3_USE_AWS_MANAGED_IAM: ${S3_USE_AWS_MANAGED_IAM:-false***REMOVED***
  AZURE_BLOB_ACCOUNT_NAME: ${AZURE_BLOB_ACCOUNT_NAME:-difyai***REMOVED***
  AZURE_BLOB_ACCOUNT_KEY: ${AZURE_BLOB_ACCOUNT_KEY:-difyai***REMOVED***
  AZURE_BLOB_CONTAINER_NAME: ${AZURE_BLOB_CONTAINER_NAME:-difyai-container***REMOVED***
  AZURE_BLOB_ACCOUNT_URL: ${AZURE_BLOB_ACCOUNT_URL:-https://<your_account_name>.blob.core.windows.net***REMOVED***
  GOOGLE_STORAGE_BUCKET_NAME: ${GOOGLE_STORAGE_BUCKET_NAME:-your-bucket-name***REMOVED***
  GOOGLE_STORAGE_SERVICE_ACCOUNT_JSON_BASE64: ${GOOGLE_STORAGE_SERVICE_ACCOUNT_JSON_BASE64:-***REMOVED***
  ALIYUN_OSS_BUCKET_NAME: ${ALIYUN_OSS_BUCKET_NAME:-your-bucket-name***REMOVED***
  ALIYUN_OSS_ACCESS_KEY: ${ALIYUN_OSS_ACCESS_KEY:-your-access-key***REMOVED***
  ALIYUN_OSS_SECRET_KEY: ${ALIYUN_OSS_SECRET_KEY:-your-secret-key***REMOVED***
  ALIYUN_OSS_ENDPOINT: ${ALIYUN_OSS_ENDPOINT:-https://oss-ap-southeast-1-internal.aliyuncs.com***REMOVED***
  ALIYUN_OSS_REGION: ${ALIYUN_OSS_REGION:-ap-southeast-1***REMOVED***
  ALIYUN_OSS_AUTH_VERSION: ${ALIYUN_OSS_AUTH_VERSION:-v4***REMOVED***
  ALIYUN_OSS_PATH: ${ALIYUN_OSS_PATH:-your-path***REMOVED***
  TENCENT_COS_BUCKET_NAME: ${TENCENT_COS_BUCKET_NAME:-your-bucket-name***REMOVED***
  TENCENT_COS_SECRET_KEY: ${TENCENT_COS_SECRET_KEY:-your-secret-key***REMOVED***
  TENCENT_COS_SECRET_ID: ${TENCENT_COS_SECRET_ID:-your-secret-id***REMOVED***
  TENCENT_COS_REGION: ${TENCENT_COS_REGION:-your-region***REMOVED***
  TENCENT_COS_SCHEME: ${TENCENT_COS_SCHEME:-your-scheme***REMOVED***
  OCI_ENDPOINT: ${OCI_ENDPOINT:-https://your-object-storage-namespace.compat.objectstorage.us-ashburn-1.oraclecloud.com***REMOVED***
  OCI_BUCKET_NAME: ${OCI_BUCKET_NAME:-your-bucket-name***REMOVED***
  OCI_ACCESS_KEY: ${OCI_ACCESS_KEY:-your-access-key***REMOVED***
  OCI_SECRET_KEY: ${OCI_SECRET_KEY:-your-secret-key***REMOVED***
  OCI_REGION: ${OCI_REGION:-us-ashburn-1***REMOVED***
  HUAWEI_OBS_BUCKET_NAME: ${HUAWEI_OBS_BUCKET_NAME:-your-bucket-name***REMOVED***
  HUAWEI_OBS_SECRET_KEY: ${HUAWEI_OBS_SECRET_KEY:-your-secret-key***REMOVED***
  HUAWEI_OBS_ACCESS_KEY: ${HUAWEI_OBS_ACCESS_KEY:-your-access-key***REMOVED***
  HUAWEI_OBS_SERVER: ${HUAWEI_OBS_SERVER:-your-server-url***REMOVED***
  VOLCENGINE_TOS_BUCKET_NAME: ${VOLCENGINE_TOS_BUCKET_NAME:-your-bucket-name***REMOVED***
  VOLCENGINE_TOS_SECRET_KEY: ${VOLCENGINE_TOS_SECRET_KEY:-your-secret-key***REMOVED***
  VOLCENGINE_TOS_ACCESS_KEY: ${VOLCENGINE_TOS_ACCESS_KEY:-your-access-key***REMOVED***
  VOLCENGINE_TOS_ENDPOINT: ${VOLCENGINE_TOS_ENDPOINT:-your-server-url***REMOVED***
  VOLCENGINE_TOS_REGION: ${VOLCENGINE_TOS_REGION:-your-region***REMOVED***
  BAIDU_OBS_BUCKET_NAME: ${BAIDU_OBS_BUCKET_NAME:-your-bucket-name***REMOVED***
  BAIDU_OBS_SECRET_KEY: ${BAIDU_OBS_SECRET_KEY:-your-secret-key***REMOVED***
  BAIDU_OBS_ACCESS_KEY: ${BAIDU_OBS_ACCESS_KEY:-your-access-key***REMOVED***
  BAIDU_OBS_ENDPOINT: ${BAIDU_OBS_ENDPOINT:-your-server-url***REMOVED***
  SUPABASE_BUCKET_NAME: ${SUPABASE_BUCKET_NAME:-your-bucket-name***REMOVED***
  SUPABASE_API_KEY: ${SUPABASE_API_KEY:-your-access-key***REMOVED***
  SUPABASE_URL: ${SUPABASE_URL:-your-server-url***REMOVED***
  VECTOR_STORE: ${VECTOR_STORE:-weaviate***REMOVED***
  WEAVIATE_ENDPOINT: ${WEAVIATE_ENDPOINT:-http://weaviate:8080***REMOVED***
  WEAVIATE_API_KEY: ${WEAVIATE_API_KEY:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih***REMOVED***
  QDRANT_URL: ${QDRANT_URL:-http://qdrant:6333***REMOVED***
  QDRANT_API_KEY: ${QDRANT_API_KEY:-difyai123456***REMOVED***
  QDRANT_CLIENT_TIMEOUT: ${QDRANT_CLIENT_TIMEOUT:-20***REMOVED***
  QDRANT_GRPC_ENABLED: ${QDRANT_GRPC_ENABLED:-false***REMOVED***
  QDRANT_GRPC_PORT: ${QDRANT_GRPC_PORT:-6334***REMOVED***
  MILVUS_URI: ${MILVUS_URI:-http://host.docker.internal:19530***REMOVED***
  MILVUS_TOKEN: ${MILVUS_TOKEN:-***REMOVED***
  MILVUS_USER: ${MILVUS_USER:-***REMOVED***
  MILVUS_PASSWORD: ${MILVUS_PASSWORD:-***REMOVED***
  MILVUS_ENABLE_HYBRID_SEARCH: ${MILVUS_ENABLE_HYBRID_SEARCH:-False***REMOVED***
  MYSCALE_HOST: ${MYSCALE_HOST:-myscale***REMOVED***
  MYSCALE_PORT: ${MYSCALE_PORT:-8123***REMOVED***
  MYSCALE_USER: ${MYSCALE_USER:-default***REMOVED***
  MYSCALE_PASSWORD: ${MYSCALE_PASSWORD:-***REMOVED***
  MYSCALE_DATABASE: ${MYSCALE_DATABASE:-dify***REMOVED***
  MYSCALE_FTS_PARAMS: ${MYSCALE_FTS_PARAMS:-***REMOVED***
  COUCHBASE_CONNECTION_STRING: ${COUCHBASE_CONNECTION_STRING:-couchbase://couchbase-server***REMOVED***
  COUCHBASE_USER: ${COUCHBASE_USER:-Administrator***REMOVED***
  COUCHBASE_PASSWORD: ${COUCHBASE_PASSWORD:-password***REMOVED***
  COUCHBASE_BUCKET_NAME: ${COUCHBASE_BUCKET_NAME:-Embeddings***REMOVED***
  COUCHBASE_SCOPE_NAME: ${COUCHBASE_SCOPE_NAME:-_default***REMOVED***
  PGVECTOR_HOST: ${PGVECTOR_HOST:-pgvector***REMOVED***
  PGVECTOR_PORT: ${PGVECTOR_PORT:-5432***REMOVED***
  PGVECTOR_USER: ${PGVECTOR_USER:-postgres***REMOVED***
  PGVECTOR_PASSWORD: ${PGVECTOR_PASSWORD:-difyai123456***REMOVED***
  PGVECTOR_DATABASE: ${PGVECTOR_DATABASE:-dify***REMOVED***
  PGVECTOR_MIN_CONNECTION: ${PGVECTOR_MIN_CONNECTION:-1***REMOVED***
  PGVECTOR_MAX_CONNECTION: ${PGVECTOR_MAX_CONNECTION:-5***REMOVED***
  PGVECTOR_PG_BIGM: ${PGVECTOR_PG_BIGM:-false***REMOVED***
  PGVECTOR_PG_BIGM_VERSION: ${PGVECTOR_PG_BIGM_VERSION:-1.2-20240606***REMOVED***
  PGVECTO_RS_HOST: ${PGVECTO_RS_HOST:-pgvecto-rs***REMOVED***
  PGVECTO_RS_PORT: ${PGVECTO_RS_PORT:-5432***REMOVED***
  PGVECTO_RS_USER: ${PGVECTO_RS_USER:-postgres***REMOVED***
  PGVECTO_RS_PASSWORD: ${PGVECTO_RS_PASSWORD:-difyai123456***REMOVED***
  PGVECTO_RS_DATABASE: ${PGVECTO_RS_DATABASE:-dify***REMOVED***
  ANALYTICDB_KEY_ID: ${ANALYTICDB_KEY_ID:-your-ak***REMOVED***
  ANALYTICDB_KEY_SECRET: ${ANALYTICDB_KEY_SECRET:-your-sk***REMOVED***
  ANALYTICDB_REGION_ID: ${ANALYTICDB_REGION_ID:-cn-hangzhou***REMOVED***
  ANALYTICDB_INSTANCE_ID: ${ANALYTICDB_INSTANCE_ID:-gp-ab123456***REMOVED***
  ANALYTICDB_ACCOUNT: ${ANALYTICDB_ACCOUNT:-testaccount***REMOVED***
  ANALYTICDB_PASSWORD: ${ANALYTICDB_PASSWORD:-testpassword***REMOVED***
  ANALYTICDB_NAMESPACE: ${ANALYTICDB_NAMESPACE:-dify***REMOVED***
  ANALYTICDB_NAMESPACE_PASSWORD: ${ANALYTICDB_NAMESPACE_PASSWORD:-difypassword***REMOVED***
  ANALYTICDB_HOST: ${ANALYTICDB_HOST:-gp-test.aliyuncs.com***REMOVED***
  ANALYTICDB_PORT: ${ANALYTICDB_PORT:-5432***REMOVED***
  ANALYTICDB_MIN_CONNECTION: ${ANALYTICDB_MIN_CONNECTION:-1***REMOVED***
  ANALYTICDB_MAX_CONNECTION: ${ANALYTICDB_MAX_CONNECTION:-5***REMOVED***
  TIDB_VECTOR_HOST: ${TIDB_VECTOR_HOST:-tidb***REMOVED***
  TIDB_VECTOR_PORT: ${TIDB_VECTOR_PORT:-4000***REMOVED***
  TIDB_VECTOR_USER: ${TIDB_VECTOR_USER:-***REMOVED***
  TIDB_VECTOR_PASSWORD: ${TIDB_VECTOR_PASSWORD:-***REMOVED***
  TIDB_VECTOR_DATABASE: ${TIDB_VECTOR_DATABASE:-dify***REMOVED***
  TIDB_ON_QDRANT_URL: ${TIDB_ON_QDRANT_URL:-http://127.0.0.1***REMOVED***
  TIDB_ON_QDRANT_API_KEY: ${TIDB_ON_QDRANT_API_KEY:-dify***REMOVED***
  TIDB_ON_QDRANT_CLIENT_TIMEOUT: ${TIDB_ON_QDRANT_CLIENT_TIMEOUT:-20***REMOVED***
  TIDB_ON_QDRANT_GRPC_ENABLED: ${TIDB_ON_QDRANT_GRPC_ENABLED:-false***REMOVED***
  TIDB_ON_QDRANT_GRPC_PORT: ${TIDB_ON_QDRANT_GRPC_PORT:-6334***REMOVED***
  TIDB_PUBLIC_KEY: ${TIDB_PUBLIC_KEY:-dify***REMOVED***
  TIDB_PRIVATE_KEY: ${TIDB_PRIVATE_KEY:-dify***REMOVED***
  TIDB_API_URL: ${TIDB_API_URL:-http://127.0.0.1***REMOVED***
  TIDB_IAM_API_URL: ${TIDB_IAM_API_URL:-http://127.0.0.1***REMOVED***
  TIDB_REGION: ${TIDB_REGION:-regions/aws-us-east-1***REMOVED***
  TIDB_PROJECT_ID: ${TIDB_PROJECT_ID:-dify***REMOVED***
  TIDB_SPEND_LIMIT: ${TIDB_SPEND_LIMIT:-100***REMOVED***
  CHROMA_HOST: ${CHROMA_HOST:-127.0.0.1***REMOVED***
  CHROMA_PORT: ${CHROMA_PORT:-8000***REMOVED***
  CHROMA_TENANT: ${CHROMA_TENANT:-default_tenant***REMOVED***
  CHROMA_DATABASE: ${CHROMA_DATABASE:-default_database***REMOVED***
  CHROMA_AUTH_PROVIDER: ${CHROMA_AUTH_PROVIDER:-chromadb.auth.token_authn.TokenAuthClientProvider***REMOVED***
  CHROMA_AUTH_CREDENTIALS: ${CHROMA_AUTH_CREDENTIALS:-***REMOVED***
  ORACLE_USER: ${ORACLE_USER:-dify***REMOVED***
  ORACLE_PASSWORD: ${ORACLE_PASSWORD:-dify***REMOVED***
  ORACLE_DSN: ${ORACLE_DSN:-oracle:1521/FREEPDB1***REMOVED***
  ORACLE_CONFIG_DIR: ${ORACLE_CONFIG_DIR:-/app/api/storage/wallet***REMOVED***
  ORACLE_WALLET_LOCATION: ${ORACLE_WALLET_LOCATION:-/app/api/storage/wallet***REMOVED***
  ORACLE_WALLET_PASSWORD: ${ORACLE_WALLET_PASSWORD:-dify***REMOVED***
  ORACLE_IS_AUTONOMOUS: ${ORACLE_IS_AUTONOMOUS:-false***REMOVED***
  RELYT_HOST: ${RELYT_HOST:-db***REMOVED***
  RELYT_PORT: ${RELYT_PORT:-5432***REMOVED***
  RELYT_USER: ${RELYT_USER:-postgres***REMOVED***
  RELYT_PASSWORD: ${RELYT_PASSWORD:-difyai123456***REMOVED***
  RELYT_DATABASE: ${RELYT_DATABASE:-postgres***REMOVED***
  OPENSEARCH_HOST: ${OPENSEARCH_HOST:-opensearch***REMOVED***
  OPENSEARCH_PORT: ${OPENSEARCH_PORT:-9200***REMOVED***
  OPENSEARCH_USER: ${OPENSEARCH_USER:-admin***REMOVED***
  OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD:-admin***REMOVED***
  OPENSEARCH_SECURE: ${OPENSEARCH_SECURE:-true***REMOVED***
  TENCENT_VECTOR_DB_URL: ${TENCENT_VECTOR_DB_URL:-http://127.0.0.1***REMOVED***
  TENCENT_VECTOR_DB_API_KEY: ${TENCENT_VECTOR_DB_API_KEY:-dify***REMOVED***
  TENCENT_VECTOR_DB_TIMEOUT: ${TENCENT_VECTOR_DB_TIMEOUT:-30***REMOVED***
  TENCENT_VECTOR_DB_USERNAME: ${TENCENT_VECTOR_DB_USERNAME:-dify***REMOVED***
  TENCENT_VECTOR_DB_DATABASE: ${TENCENT_VECTOR_DB_DATABASE:-dify***REMOVED***
  TENCENT_VECTOR_DB_SHARD: ${TENCENT_VECTOR_DB_SHARD:-1***REMOVED***
  TENCENT_VECTOR_DB_REPLICAS: ${TENCENT_VECTOR_DB_REPLICAS:-2***REMOVED***
  ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST:-0.0.0.0***REMOVED***
  ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT:-9200***REMOVED***
  ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-elastic***REMOVED***
  ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD:-elastic***REMOVED***
  KIBANA_PORT: ${KIBANA_PORT:-5601***REMOVED***
  BAIDU_VECTOR_DB_ENDPOINT: ${BAIDU_VECTOR_DB_ENDPOINT:-http://127.0.0.1:5287***REMOVED***
  BAIDU_VECTOR_DB_CONNECTION_TIMEOUT_MS: ${BAIDU_VECTOR_DB_CONNECTION_TIMEOUT_MS:-30000***REMOVED***
  BAIDU_VECTOR_DB_ACCOUNT: ${BAIDU_VECTOR_DB_ACCOUNT:-root***REMOVED***
  BAIDU_VECTOR_DB_API_KEY: ${BAIDU_VECTOR_DB_API_KEY:-dify***REMOVED***
  BAIDU_VECTOR_DB_DATABASE: ${BAIDU_VECTOR_DB_DATABASE:-dify***REMOVED***
  BAIDU_VECTOR_DB_SHARD: ${BAIDU_VECTOR_DB_SHARD:-1***REMOVED***
  BAIDU_VECTOR_DB_REPLICAS: ${BAIDU_VECTOR_DB_REPLICAS:-3***REMOVED***
  VIKINGDB_ACCESS_KEY: ${VIKINGDB_ACCESS_KEY:-your-ak***REMOVED***
  VIKINGDB_SECRET_KEY: ${VIKINGDB_SECRET_KEY:-your-sk***REMOVED***
  VIKINGDB_REGION: ${VIKINGDB_REGION:-cn-shanghai***REMOVED***
  VIKINGDB_HOST: ${VIKINGDB_HOST:-api-vikingdb.xxx.volces.com***REMOVED***
  VIKINGDB_SCHEMA: ${VIKINGDB_SCHEMA:-http***REMOVED***
  VIKINGDB_CONNECTION_TIMEOUT: ${VIKINGDB_CONNECTION_TIMEOUT:-30***REMOVED***
  VIKINGDB_SOCKET_TIMEOUT: ${VIKINGDB_SOCKET_TIMEOUT:-30***REMOVED***
  LINDORM_URL: ${LINDORM_URL:-http://lindorm:30070***REMOVED***
  LINDORM_USERNAME: ${LINDORM_USERNAME:-lindorm***REMOVED***
  LINDORM_PASSWORD: ${LINDORM_PASSWORD:-lindorm***REMOVED***
  OCEANBASE_VECTOR_HOST: ${OCEANBASE_VECTOR_HOST:-oceanbase***REMOVED***
  OCEANBASE_VECTOR_PORT: ${OCEANBASE_VECTOR_PORT:-2881***REMOVED***
  OCEANBASE_VECTOR_USER: ${OCEANBASE_VECTOR_USER:-root@test***REMOVED***
  OCEANBASE_VECTOR_PASSWORD: ${OCEANBASE_VECTOR_PASSWORD:-difyai123456***REMOVED***
  OCEANBASE_VECTOR_DATABASE: ${OCEANBASE_VECTOR_DATABASE:-test***REMOVED***
  OCEANBASE_CLUSTER_NAME: ${OCEANBASE_CLUSTER_NAME:-difyai***REMOVED***
  OCEANBASE_MEMORY_LIMIT: ${OCEANBASE_MEMORY_LIMIT:-6G***REMOVED***
  OPENGAUSS_HOST: ${OPENGAUSS_HOST:-opengauss***REMOVED***
  OPENGAUSS_PORT: ${OPENGAUSS_PORT:-6600***REMOVED***
  OPENGAUSS_USER: ${OPENGAUSS_USER:-postgres***REMOVED***
  OPENGAUSS_PASSWORD: ${OPENGAUSS_PASSWORD:-Dify@123***REMOVED***
  OPENGAUSS_DATABASE: ${OPENGAUSS_DATABASE:-dify***REMOVED***
  OPENGAUSS_MIN_CONNECTION: ${OPENGAUSS_MIN_CONNECTION:-1***REMOVED***
  OPENGAUSS_MAX_CONNECTION: ${OPENGAUSS_MAX_CONNECTION:-5***REMOVED***
  UPSTASH_VECTOR_URL: ${UPSTASH_VECTOR_URL:-https://xxx-vector.upstash.io***REMOVED***
  UPSTASH_VECTOR_TOKEN: ${UPSTASH_VECTOR_TOKEN:-dify***REMOVED***
  UPLOAD_FILE_SIZE_LIMIT: ${UPLOAD_FILE_SIZE_LIMIT:-15***REMOVED***
  UPLOAD_FILE_BATCH_LIMIT: ${UPLOAD_FILE_BATCH_LIMIT:-5***REMOVED***
  ETL_TYPE: ${ETL_TYPE:-dify***REMOVED***
  UNSTRUCTURED_API_URL: ${UNSTRUCTURED_API_URL:-***REMOVED***
  UNSTRUCTURED_API_KEY: ${UNSTRUCTURED_API_KEY:-***REMOVED***
  SCARF_NO_ANALYTICS: ${SCARF_NO_ANALYTICS:-true***REMOVED***
  PROMPT_GENERATION_MAX_TOKENS: ${PROMPT_GENERATION_MAX_TOKENS:-512***REMOVED***
  CODE_GENERATION_MAX_TOKENS: ${CODE_GENERATION_MAX_TOKENS:-1024***REMOVED***
  MULTIMODAL_SEND_FORMAT: ${MULTIMODAL_SEND_FORMAT:-base64***REMOVED***
  UPLOAD_IMAGE_FILE_SIZE_LIMIT: ${UPLOAD_IMAGE_FILE_SIZE_LIMIT:-10***REMOVED***
  UPLOAD_VIDEO_FILE_SIZE_LIMIT: ${UPLOAD_VIDEO_FILE_SIZE_LIMIT:-100***REMOVED***
  UPLOAD_AUDIO_FILE_SIZE_LIMIT: ${UPLOAD_AUDIO_FILE_SIZE_LIMIT:-50***REMOVED***
  SENTRY_DSN: ${SENTRY_DSN:-***REMOVED***
  API_SENTRY_DSN: ${API_SENTRY_DSN:-***REMOVED***
  API_SENTRY_TRACES_SAMPLE_RATE: ${API_SENTRY_TRACES_SAMPLE_RATE:-1.0***REMOVED***
  API_SENTRY_PROFILES_SAMPLE_RATE: ${API_SENTRY_PROFILES_SAMPLE_RATE:-1.0***REMOVED***
  WEB_SENTRY_DSN: ${WEB_SENTRY_DSN:-***REMOVED***
  NOTION_INTEGRATION_TYPE: ${NOTION_INTEGRATION_TYPE:-public***REMOVED***
  NOTION_CLIENT_SECRET: ${NOTION_CLIENT_SECRET:-***REMOVED***
  NOTION_CLIENT_ID: ${NOTION_CLIENT_ID:-***REMOVED***
  NOTION_INTERNAL_SECRET: ${NOTION_INTERNAL_SECRET:-***REMOVED***
  MAIL_TYPE: ${MAIL_TYPE:-resend***REMOVED***
  MAIL_DEFAULT_SEND_FROM: ${MAIL_DEFAULT_SEND_FROM:-***REMOVED***
  RESEND_API_URL: ${RESEND_API_URL:-https://api.resend.com***REMOVED***
  RESEND_API_KEY: ${RESEND_API_KEY:-your-resend-api-key***REMOVED***
  SMTP_SERVER: ${SMTP_SERVER:-***REMOVED***
  SMTP_PORT: ${SMTP_PORT:-465***REMOVED***
  SMTP_USERNAME: ${SMTP_USERNAME:-***REMOVED***
  SMTP_PASSWORD: ${SMTP_PASSWORD:-***REMOVED***
  SMTP_USE_TLS: ${SMTP_USE_TLS:-true***REMOVED***
  SMTP_OPPORTUNISTIC_TLS: ${SMTP_OPPORTUNISTIC_TLS:-false***REMOVED***
  INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: ${INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH:-4000***REMOVED***
  INVITE_EXPIRY_HOURS: ${INVITE_EXPIRY_HOURS:-72***REMOVED***
  RESET_PASSWORD_TOKEN_EXPIRY_MINUTES: ${RESET_PASSWORD_TOKEN_EXPIRY_MINUTES:-5***REMOVED***
  CODE_EXECUTION_ENDPOINT: ${CODE_EXECUTION_ENDPOINT:-http://sandbox:8194***REMOVED***
  CODE_EXECUTION_API_KEY: ${CODE_EXECUTION_API_KEY:-dify-sandbox***REMOVED***
  CODE_MAX_NUMBER: ${CODE_MAX_NUMBER:-9223372036854775807***REMOVED***
  CODE_MIN_NUMBER: ${CODE_MIN_NUMBER:--9223372036854775808***REMOVED***
  CODE_MAX_DEPTH: ${CODE_MAX_DEPTH:-5***REMOVED***
  CODE_MAX_PRECISION: ${CODE_MAX_PRECISION:-20***REMOVED***
  CODE_MAX_STRING_LENGTH: ${CODE_MAX_STRING_LENGTH:-80000***REMOVED***
  CODE_MAX_STRING_ARRAY_LENGTH: ${CODE_MAX_STRING_ARRAY_LENGTH:-30***REMOVED***
  CODE_MAX_OBJECT_ARRAY_LENGTH: ${CODE_MAX_OBJECT_ARRAY_LENGTH:-30***REMOVED***
  CODE_MAX_NUMBER_ARRAY_LENGTH: ${CODE_MAX_NUMBER_ARRAY_LENGTH:-1000***REMOVED***
  CODE_EXECUTION_CONNECT_TIMEOUT: ${CODE_EXECUTION_CONNECT_TIMEOUT:-10***REMOVED***
  CODE_EXECUTION_READ_TIMEOUT: ${CODE_EXECUTION_READ_TIMEOUT:-60***REMOVED***
  CODE_EXECUTION_WRITE_TIMEOUT: ${CODE_EXECUTION_WRITE_TIMEOUT:-10***REMOVED***
  TEMPLATE_TRANSFORM_MAX_LENGTH: ${TEMPLATE_TRANSFORM_MAX_LENGTH:-80000***REMOVED***
  WORKFLOW_MAX_EXECUTION_STEPS: ${WORKFLOW_MAX_EXECUTION_STEPS:-500***REMOVED***
  WORKFLOW_MAX_EXECUTION_TIME: ${WORKFLOW_MAX_EXECUTION_TIME:-1200***REMOVED***
  WORKFLOW_CALL_MAX_DEPTH: ${WORKFLOW_CALL_MAX_DEPTH:-5***REMOVED***
  MAX_VARIABLE_SIZE: ${MAX_VARIABLE_SIZE:-204800***REMOVED***
  WORKFLOW_PARALLEL_DEPTH_LIMIT: ${WORKFLOW_PARALLEL_DEPTH_LIMIT:-3***REMOVED***
  WORKFLOW_FILE_UPLOAD_LIMIT: ${WORKFLOW_FILE_UPLOAD_LIMIT:-10***REMOVED***
  HTTP_REQUEST_NODE_MAX_BINARY_SIZE: ${HTTP_REQUEST_NODE_MAX_BINARY_SIZE:-10485760***REMOVED***
  HTTP_REQUEST_NODE_MAX_TEXT_SIZE: ${HTTP_REQUEST_NODE_MAX_TEXT_SIZE:-1048576***REMOVED***
  HTTP_REQUEST_NODE_SSL_VERIFY: ${HTTP_REQUEST_NODE_SSL_VERIFY:-True***REMOVED***
  SSRF_PROXY_HTTP_URL: ${SSRF_PROXY_HTTP_URL:-http://ssrf_proxy:3128***REMOVED***
  SSRF_PROXY_HTTPS_URL: ${SSRF_PROXY_HTTPS_URL:-http://ssrf_proxy:3128***REMOVED***
  LOOP_NODE_MAX_COUNT: ${LOOP_NODE_MAX_COUNT:-100***REMOVED***
  MAX_TOOLS_NUM: ${MAX_TOOLS_NUM:-10***REMOVED***
  MAX_PARALLEL_LIMIT: ${MAX_PARALLEL_LIMIT:-10***REMOVED***
  TEXT_GENERATION_TIMEOUT_MS: ${TEXT_GENERATION_TIMEOUT_MS:-60000***REMOVED***
  PGUSER: ${PGUSER:-${DB_USERNAME***REMOVED******REMOVED***
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-${DB_PASSWORD***REMOVED******REMOVED***
  POSTGRES_DB: ${POSTGRES_DB:-${DB_DATABASE***REMOVED******REMOVED***
  PGDATA: ${PGDATA:-/var/lib/postgresql/data/pgdata***REMOVED***
  SANDBOX_API_KEY: ${SANDBOX_API_KEY:-dify-sandbox***REMOVED***
  SANDBOX_GIN_MODE: ${SANDBOX_GIN_MODE:-release***REMOVED***
  SANDBOX_WORKER_TIMEOUT: ${SANDBOX_WORKER_TIMEOUT:-15***REMOVED***
  SANDBOX_ENABLE_NETWORK: ${SANDBOX_ENABLE_NETWORK:-true***REMOVED***
  SANDBOX_HTTP_PROXY: ${SANDBOX_HTTP_PROXY:-http://ssrf_proxy:3128***REMOVED***
  SANDBOX_HTTPS_PROXY: ${SANDBOX_HTTPS_PROXY:-http://ssrf_proxy:3128***REMOVED***
  SANDBOX_PORT: ${SANDBOX_PORT:-8194***REMOVED***
  WEAVIATE_PERSISTENCE_DATA_PATH: ${WEAVIATE_PERSISTENCE_DATA_PATH:-/var/lib/weaviate***REMOVED***
  WEAVIATE_QUERY_DEFAULTS_LIMIT: ${WEAVIATE_QUERY_DEFAULTS_LIMIT:-25***REMOVED***
  WEAVIATE_AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: ${WEAVIATE_AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED:-true***REMOVED***
  WEAVIATE_DEFAULT_VECTORIZER_MODULE: ${WEAVIATE_DEFAULT_VECTORIZER_MODULE:-none***REMOVED***
  WEAVIATE_CLUSTER_HOSTNAME: ${WEAVIATE_CLUSTER_HOSTNAME:-node1***REMOVED***
  WEAVIATE_AUTHENTICATION_APIKEY_ENABLED: ${WEAVIATE_AUTHENTICATION_APIKEY_ENABLED:-true***REMOVED***
  WEAVIATE_AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_AUTHENTICATION_APIKEY_ALLOWED_KEYS:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih***REMOVED***
  WEAVIATE_AUTHENTICATION_APIKEY_USERS: ${WEAVIATE_AUTHENTICATION_APIKEY_USERS:-hello@dify.ai***REMOVED***
  WEAVIATE_AUTHORIZATION_ADMINLIST_ENABLED: ${WEAVIATE_AUTHORIZATION_ADMINLIST_ENABLED:-true***REMOVED***
  WEAVIATE_AUTHORIZATION_ADMINLIST_USERS: ${WEAVIATE_AUTHORIZATION_ADMINLIST_USERS:-hello@dify.ai***REMOVED***
  CHROMA_SERVER_AUTHN_CREDENTIALS: ${CHROMA_SERVER_AUTHN_CREDENTIALS:-difyai123456***REMOVED***
  CHROMA_SERVER_AUTHN_PROVIDER: ${CHROMA_SERVER_AUTHN_PROVIDER:-chromadb.auth.token_authn.TokenAuthenticationServerProvider***REMOVED***
  CHROMA_IS_PERSISTENT: ${CHROMA_IS_PERSISTENT:-TRUE***REMOVED***
  ORACLE_PWD: ${ORACLE_PWD:-Dify123456***REMOVED***
  ORACLE_CHARACTERSET: ${ORACLE_CHARACTERSET:-AL32UTF8***REMOVED***
  ETCD_AUTO_COMPACTION_MODE: ${ETCD_AUTO_COMPACTION_MODE:-revision***REMOVED***
  ETCD_AUTO_COMPACTION_RETENTION: ${ETCD_AUTO_COMPACTION_RETENTION:-1000***REMOVED***
  ETCD_QUOTA_BACKEND_BYTES: ${ETCD_QUOTA_BACKEND_BYTES:-4294967296***REMOVED***
  ETCD_SNAPSHOT_COUNT: ${ETCD_SNAPSHOT_COUNT:-50000***REMOVED***
  MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin***REMOVED***
  MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin***REMOVED***
  ETCD_ENDPOINTS: ${ETCD_ENDPOINTS:-etcd:2379***REMOVED***
  MINIO_ADDRESS: ${MINIO_ADDRESS:-minio:9000***REMOVED***
  MILVUS_AUTHORIZATION_ENABLED: ${MILVUS_AUTHORIZATION_ENABLED:-true***REMOVED***
  PGVECTOR_PGUSER: ${PGVECTOR_PGUSER:-postgres***REMOVED***
  PGVECTOR_POSTGRES_PASSWORD: ${PGVECTOR_POSTGRES_PASSWORD:-difyai123456***REMOVED***
  PGVECTOR_POSTGRES_DB: ${PGVECTOR_POSTGRES_DB:-dify***REMOVED***
  PGVECTOR_PGDATA: ${PGVECTOR_PGDATA:-/var/lib/postgresql/data/pgdata***REMOVED***
  OPENSEARCH_DISCOVERY_TYPE: ${OPENSEARCH_DISCOVERY_TYPE:-single-node***REMOVED***
  OPENSEARCH_BOOTSTRAP_MEMORY_LOCK: ${OPENSEARCH_BOOTSTRAP_MEMORY_LOCK:-true***REMOVED***
  OPENSEARCH_JAVA_OPTS_MIN: ${OPENSEARCH_JAVA_OPTS_MIN:-512m***REMOVED***
  OPENSEARCH_JAVA_OPTS_MAX: ${OPENSEARCH_JAVA_OPTS_MAX:-1024m***REMOVED***
  OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD:-Qazwsxedc!@#123***REMOVED***
  OPENSEARCH_MEMLOCK_SOFT: ${OPENSEARCH_MEMLOCK_SOFT:--1***REMOVED***
  OPENSEARCH_MEMLOCK_HARD: ${OPENSEARCH_MEMLOCK_HARD:--1***REMOVED***
  OPENSEARCH_NOFILE_SOFT: ${OPENSEARCH_NOFILE_SOFT:-65536***REMOVED***
  OPENSEARCH_NOFILE_HARD: ${OPENSEARCH_NOFILE_HARD:-65536***REMOVED***
  NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-_***REMOVED***
  NGINX_HTTPS_ENABLED: ${NGINX_HTTPS_ENABLED:-false***REMOVED***
  NGINX_PORT: ${NGINX_PORT:-80***REMOVED***
  NGINX_SSL_PORT: ${NGINX_SSL_PORT:-443***REMOVED***
  NGINX_SSL_CERT_FILENAME: ${NGINX_SSL_CERT_FILENAME:-dify.crt***REMOVED***
  NGINX_SSL_CERT_KEY_FILENAME: ${NGINX_SSL_CERT_KEY_FILENAME:-dify.key***REMOVED***
  NGINX_SSL_PROTOCOLS: ${NGINX_SSL_PROTOCOLS:-TLSv1.1 TLSv1.2 TLSv1.3***REMOVED***
  NGINX_WORKER_PROCESSES: ${NGINX_WORKER_PROCESSES:-auto***REMOVED***
  NGINX_CLIENT_MAX_BODY_SIZE: ${NGINX_CLIENT_MAX_BODY_SIZE:-15M***REMOVED***
  NGINX_KEEPALIVE_TIMEOUT: ${NGINX_KEEPALIVE_TIMEOUT:-65***REMOVED***
  NGINX_PROXY_READ_TIMEOUT: ${NGINX_PROXY_READ_TIMEOUT:-3600s***REMOVED***
  NGINX_PROXY_SEND_TIMEOUT: ${NGINX_PROXY_SEND_TIMEOUT:-3600s***REMOVED***
  NGINX_ENABLE_CERTBOT_CHALLENGE: ${NGINX_ENABLE_CERTBOT_CHALLENGE:-false***REMOVED***
  CERTBOT_EMAIL: ${CERTBOT_EMAIL:-your_email@example.com***REMOVED***
  CERTBOT_DOMAIN: ${CERTBOT_DOMAIN:-your_domain.com***REMOVED***
  CERTBOT_OPTIONS: ${CERTBOT_OPTIONS:-***REMOVED***
  SSRF_HTTP_PORT: ${SSRF_HTTP_PORT:-3128***REMOVED***
  SSRF_COREDUMP_DIR: ${SSRF_COREDUMP_DIR:-/var/spool/squid***REMOVED***
  SSRF_REVERSE_PROXY_PORT: ${SSRF_REVERSE_PROXY_PORT:-8194***REMOVED***
  SSRF_SANDBOX_HOST: ${SSRF_SANDBOX_HOST:-sandbox***REMOVED***
  SSRF_DEFAULT_TIME_OUT: ${SSRF_DEFAULT_TIME_OUT:-5***REMOVED***
  SSRF_DEFAULT_CONNECT_TIME_OUT: ${SSRF_DEFAULT_CONNECT_TIME_OUT:-5***REMOVED***
  SSRF_DEFAULT_READ_TIME_OUT: ${SSRF_DEFAULT_READ_TIME_OUT:-5***REMOVED***
  SSRF_DEFAULT_WRITE_TIME_OUT: ${SSRF_DEFAULT_WRITE_TIME_OUT:-5***REMOVED***
  EXPOSE_NGINX_PORT: ${EXPOSE_NGINX_PORT:-80***REMOVED***
  EXPOSE_NGINX_SSL_PORT: ${EXPOSE_NGINX_SSL_PORT:-443***REMOVED***
  POSITION_TOOL_PINS: ${POSITION_TOOL_PINS:-***REMOVED***
  POSITION_TOOL_INCLUDES: ${POSITION_TOOL_INCLUDES:-***REMOVED***
  POSITION_TOOL_EXCLUDES: ${POSITION_TOOL_EXCLUDES:-***REMOVED***
  POSITION_PROVIDER_PINS: ${POSITION_PROVIDER_PINS:-***REMOVED***
  POSITION_PROVIDER_INCLUDES: ${POSITION_PROVIDER_INCLUDES:-***REMOVED***
  POSITION_PROVIDER_EXCLUDES: ${POSITION_PROVIDER_EXCLUDES:-***REMOVED***
  CSP_WHITELIST: ${CSP_WHITELIST:-***REMOVED***
  CREATE_TIDB_SERVICE_JOB_ENABLED: ${CREATE_TIDB_SERVICE_JOB_ENABLED:-false***REMOVED***
  MAX_SUBMIT_COUNT: ${MAX_SUBMIT_COUNT:-100***REMOVED***
  TOP_K_MAX_VALUE: ${TOP_K_MAX_VALUE:-10***REMOVED***
  DB_PLUGIN_DATABASE: ${DB_PLUGIN_DATABASE:-dify_plugin***REMOVED***
  EXPOSE_PLUGIN_DAEMON_PORT: ${EXPOSE_PLUGIN_DAEMON_PORT:-5002***REMOVED***
  PLUGIN_DAEMON_PORT: ${PLUGIN_DAEMON_PORT:-5002***REMOVED***
  PLUGIN_DAEMON_KEY: ${PLUGIN_DAEMON_KEY:-lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi***REMOVED***
  PLUGIN_DAEMON_URL: ${PLUGIN_DAEMON_URL:-http://plugin_daemon:5002***REMOVED***
  PLUGIN_MAX_PACKAGE_SIZE: ${PLUGIN_MAX_PACKAGE_SIZE:-52428800***REMOVED***
  PLUGIN_PPROF_ENABLED: ${PLUGIN_PPROF_ENABLED:-false***REMOVED***
  PLUGIN_DEBUGGING_HOST: ${PLUGIN_DEBUGGING_HOST:-0.0.0.0***REMOVED***
  PLUGIN_DEBUGGING_PORT: ${PLUGIN_DEBUGGING_PORT:-5003***REMOVED***
  EXPOSE_PLUGIN_DEBUGGING_HOST: ${EXPOSE_PLUGIN_DEBUGGING_HOST:-localhost***REMOVED***
  EXPOSE_PLUGIN_DEBUGGING_PORT: ${EXPOSE_PLUGIN_DEBUGGING_PORT:-5003***REMOVED***
  PLUGIN_DIFY_INNER_API_KEY: ${PLUGIN_DIFY_INNER_API_KEY:-QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1***REMOVED***
  PLUGIN_DIFY_INNER_API_URL: ${PLUGIN_DIFY_INNER_API_URL:-http://api:5001***REMOVED***
  ENDPOINT_URL_TEMPLATE: ${ENDPOINT_URL_TEMPLATE:-http://localhost/e/{hook_id***REMOVED******REMOVED***
  MARKETPLACE_ENABLED: ${MARKETPLACE_ENABLED:-true***REMOVED***
  MARKETPLACE_API_URL: ${MARKETPLACE_API_URL:-https://marketplace.dify.ai***REMOVED***
  FORCE_VERIFYING_SIGNATURE: ${FORCE_VERIFYING_SIGNATURE:-true***REMOVED***
  PLUGIN_PYTHON_ENV_INIT_TIMEOUT: ${PLUGIN_PYTHON_ENV_INIT_TIMEOUT:-120***REMOVED***
  PLUGIN_MAX_EXECUTION_TIMEOUT: ${PLUGIN_MAX_EXECUTION_TIMEOUT:-600***REMOVED***
  PIP_MIRROR_URL: ${PIP_MIRROR_URL:-***REMOVED***

services:
  # API service
  api:
    image: langgenius/dify-api:1.0.1
    restart: always
    environment:
      # Use the shared environment variables.
      <<: *shared-api-worker-env
      # Startup mode, 'api' starts the API server.
      MODE: api
      SENTRY_DSN: ${API_SENTRY_DSN:-***REMOVED***
      SENTRY_TRACES_SAMPLE_RATE: ${API_SENTRY_TRACES_SAMPLE_RATE:-1.0***REMOVED***
      SENTRY_PROFILES_SAMPLE_RATE: ${API_SENTRY_PROFILES_SAMPLE_RATE:-1.0***REMOVED***
      PLUGIN_REMOTE_INSTALL_HOST: ${EXPOSE_PLUGIN_DEBUGGING_HOST:-localhost***REMOVED***
      PLUGIN_REMOTE_INSTALL_PORT: ${EXPOSE_PLUGIN_DEBUGGING_PORT:-5003***REMOVED***
      PLUGIN_MAX_PACKAGE_SIZE: ${PLUGIN_MAX_PACKAGE_SIZE:-52428800***REMOVED***
      INNER_API_KEY_FOR_PLUGIN: ${PLUGIN_DIFY_INNER_API_KEY:-QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1***REMOVED***
    depends_on:
      - db
      - redis
    volumes:
      # Mount the storage directory to the container, for storing user files.
      - ./volumes/app/storage:/app/api/storage
    networks:
      - ssrf_proxy_network
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # worker service
  # The Celery worker for processing the queue.
  worker:
    image: langgenius/dify-api:1.0.1
    restart: always
    environment:
      # Use the shared environment variables.
      <<: *shared-api-worker-env
      # Startup mode, 'worker' starts the Celery worker for processing the queue.
      MODE: worker
      SENTRY_DSN: ${API_SENTRY_DSN:-***REMOVED***
      SENTRY_TRACES_SAMPLE_RATE: ${API_SENTRY_TRACES_SAMPLE_RATE:-1.0***REMOVED***
      SENTRY_PROFILES_SAMPLE_RATE: ${API_SENTRY_PROFILES_SAMPLE_RATE:-1.0***REMOVED***
      PLUGIN_MAX_PACKAGE_SIZE: ${PLUGIN_MAX_PACKAGE_SIZE:-52428800***REMOVED***
      INNER_API_KEY_FOR_PLUGIN: ${PLUGIN_DIFY_INNER_API_KEY:-QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1***REMOVED***
    depends_on:
      - db
      - redis
    volumes:
      # Mount the storage directory to the container, for storing user files.
      - ./volumes/app/storage:/app/api/storage
    networks:
      - ssrf_proxy_network
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Frontend web application.
  web:
    image: langgenius/dify-web:1.0.1
    restart: always
    environment:
      CONSOLE_API_URL: ${CONSOLE_API_URL:-***REMOVED***
      APP_API_URL: ${APP_API_URL:-***REMOVED***
      SENTRY_DSN: ${WEB_SENTRY_DSN:-***REMOVED***
      NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED:-0***REMOVED***
      TEXT_GENERATION_TIMEOUT_MS: ${TEXT_GENERATION_TIMEOUT_MS:-60000***REMOVED***
      CSP_WHITELIST: ${CSP_WHITELIST:-***REMOVED***
      MARKETPLACE_API_URL: ${MARKETPLACE_API_URL:-https://marketplace.dify.ai***REMOVED***
      MARKETPLACE_URL: ${MARKETPLACE_URL:-https://marketplace.dify.ai***REMOVED***
      TOP_K_MAX_VALUE: ${TOP_K_MAX_VALUE:-***REMOVED***
      INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: ${INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH:-***REMOVED***
      PM2_INSTANCES: ${PM2_INSTANCES:-2***REMOVED***
      LOOP_NODE_MAX_COUNT: ${LOOP_NODE_MAX_COUNT:-100***REMOVED***
      MAX_TOOLS_NUM: ${MAX_TOOLS_NUM:-10***REMOVED***
      MAX_PARALLEL_LIMIT: ${MAX_PARALLEL_LIMIT:-10***REMOVED***

  # The postgres database.
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      PGUSER: ${PGUSER:-postgres***REMOVED***
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-difyai123456***REMOVED***
      POSTGRES_DB: ${POSTGRES_DB:-dify***REMOVED***
      PGDATA: ${PGDATA:-/var/lib/postgresql/data/pgdata***REMOVED***
    command: >
      postgres -c 'max_connections=${POSTGRES_MAX_CONNECTIONS:-100***REMOVED***'
               -c 'shared_buffers=${POSTGRES_SHARED_BUFFERS:-128MB***REMOVED***'
               -c 'work_mem=${POSTGRES_WORK_MEM:-4MB***REMOVED***'
               -c 'maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-64MB***REMOVED***'
               -c 'effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-4096MB***REMOVED***'
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 1s
      timeout: 3s
      retries: 30

  # The redis cache.
  redis:
    image: redis:6-alpine
    restart: always
    environment:
      REDISCLI_AUTH: ${REDIS_PASSWORD:-difyai123456***REMOVED***
    volumes:
      # Mount the redis data directory to the container.
      - ./volumes/redis/data:/data
    # Set the redis password when startup redis server.
    command: redis-server --requirepass ${REDIS_PASSWORD:-difyai123456***REMOVED***
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]

  # The DifySandbox
  sandbox:
    image: langgenius/dify-sandbox:0.2.10
    restart: always
    environment:
      # The DifySandbox configurations
      # Make sure you are changing this key for your deployment with a strong key.
      # You can generate a strong key using `openssl rand -base64 42`.
      API_KEY: ${SANDBOX_API_KEY:-dify-sandbox***REMOVED***
      GIN_MODE: ${SANDBOX_GIN_MODE:-release***REMOVED***
      WORKER_TIMEOUT: ${SANDBOX_WORKER_TIMEOUT:-15***REMOVED***
      ENABLE_NETWORK: ${SANDBOX_ENABLE_NETWORK:-true***REMOVED***
      HTTP_PROXY: ${SANDBOX_HTTP_PROXY:-http://ssrf_proxy:3128***REMOVED***
      HTTPS_PROXY: ${SANDBOX_HTTPS_PROXY:-http://ssrf_proxy:3128***REMOVED***
      SANDBOX_PORT: ${SANDBOX_PORT:-8194***REMOVED***
    volumes:
      - ./volumes/sandbox/dependencies:/dependencies
      - ./volumes/sandbox/conf:/conf
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8194/health' ]
    networks:
      - ssrf_proxy_network

  # plugin daemon
  plugin_daemon:
    image: langgenius/dify-plugin-daemon:0.0.4-local
    restart: always
    environment:
      # Use the shared environment variables.
      <<: *shared-api-worker-env
      DB_DATABASE: ${DB_PLUGIN_DATABASE:-dify_plugin***REMOVED***
      SERVER_PORT: ${PLUGIN_DAEMON_PORT:-5002***REMOVED***
      SERVER_KEY: ${PLUGIN_DAEMON_KEY:-lYkiYYT6owG+71oLerGzA7GXCgOT++6ovaezWAjpCjf+Sjc3ZtU+qUEi***REMOVED***
      MAX_PLUGIN_PACKAGE_SIZE: ${PLUGIN_MAX_PACKAGE_SIZE:-52428800***REMOVED***
      PPROF_ENABLED: ${PLUGIN_PPROF_ENABLED:-false***REMOVED***
      DIFY_INNER_API_URL: ${PLUGIN_DIFY_INNER_API_URL:-http://api:5001***REMOVED***
      DIFY_INNER_API_KEY: ${PLUGIN_DIFY_INNER_API_KEY:-QaHbTe77CtuXmsfyhR7+vRjI/+XbV1AaFy691iy+kGDv2Jvy0/eAh8Y1***REMOVED***
      PLUGIN_REMOTE_INSTALLING_HOST: ${PLUGIN_DEBUGGING_HOST:-0.0.0.0***REMOVED***
      PLUGIN_REMOTE_INSTALLING_PORT: ${PLUGIN_DEBUGGING_PORT:-5003***REMOVED***
      PLUGIN_WORKING_PATH: ${PLUGIN_WORKING_PATH:-/app/storage/cwd***REMOVED***
      FORCE_VERIFYING_SIGNATURE: ${FORCE_VERIFYING_SIGNATURE:-true***REMOVED***
      PYTHON_ENV_INIT_TIMEOUT: ${PLUGIN_PYTHON_ENV_INIT_TIMEOUT:-120***REMOVED***
      PLUGIN_MAX_EXECUTION_TIMEOUT: ${PLUGIN_MAX_EXECUTION_TIMEOUT:-600***REMOVED***
      PIP_MIRROR_URL: ${PIP_MIRROR_URL:-***REMOVED***
    ports:
      - "${EXPOSE_PLUGIN_DEBUGGING_PORT:-5003***REMOVED***:${PLUGIN_DEBUGGING_PORT:-5003***REMOVED***"
    volumes:
      - ./volumes/plugin_daemon:/app/storage
    depends_on:
      - db

  # ssrf_proxy server
  # for more information, please refer to
  # https://docs.dify.ai/learn-more/faq/install-faq#id-18.-why-is-ssrf_proxy-needed
  ssrf_proxy:
    image: ubuntu/squid:latest
    restart: always
    volumes:
      - ./ssrf_proxy/squid.conf.template:/etc/squid/squid.conf.template
      - ./ssrf_proxy/docker-entrypoint.sh:/docker-entrypoint-mount.sh
    entrypoint: [ 'sh', '-c', "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh" ]
    environment:
      # pls clearly modify the squid env vars to fit your network environment.
      HTTP_PORT: ${SSRF_HTTP_PORT:-3128***REMOVED***
      COREDUMP_DIR: ${SSRF_COREDUMP_DIR:-/var/spool/squid***REMOVED***
      REVERSE_PROXY_PORT: ${SSRF_REVERSE_PROXY_PORT:-8194***REMOVED***
      SANDBOX_HOST: ${SSRF_SANDBOX_HOST:-sandbox***REMOVED***
      SANDBOX_PORT: ${SANDBOX_PORT:-8194***REMOVED***
    networks:
      - ssrf_proxy_network
      - default

  # Certbot service
  # use `docker-compose --profile certbot up` to start the certbot service.
  certbot:
    image: certbot/certbot
    profiles:
      - certbot
    volumes:
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/html
      - ./volumes/certbot/logs:/var/log/letsencrypt
      - ./volumes/certbot/conf/live:/etc/letsencrypt/live
      - ./certbot/update-cert.template.txt:/update-cert.template.txt
      - ./certbot/docker-entrypoint.sh:/docker-entrypoint.sh
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL***REMOVED***
      - CERTBOT_DOMAIN=${CERTBOT_DOMAIN***REMOVED***
      - CERTBOT_OPTIONS=${CERTBOT_OPTIONS:-***REMOVED***
    entrypoint: [ '/docker-entrypoint.sh' ]
    command: [ 'tail', '-f', '/dev/null' ]

  # The nginx reverse proxy.
  # used for reverse proxying the API service and Web service.
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./nginx/proxy.conf.template:/etc/nginx/proxy.conf.template
      - ./nginx/https.conf.template:/etc/nginx/https.conf.template
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/docker-entrypoint.sh:/docker-entrypoint-mount.sh
      - ./nginx/ssl:/etc/ssl # cert dir (legacy***REMOVED***
      - ./volumes/certbot/conf/live:/etc/letsencrypt/live # cert dir (with certbot container***REMOVED***
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/html
    entrypoint: [ 'sh', '-c', "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh" ]
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-_***REMOVED***
      NGINX_HTTPS_ENABLED: ${NGINX_HTTPS_ENABLED:-false***REMOVED***
      NGINX_SSL_PORT: ${NGINX_SSL_PORT:-443***REMOVED***
      NGINX_PORT: ${NGINX_PORT:-80***REMOVED***
      # You're required to add your own SSL certificates/keys to the `./nginx/ssl` directory
      # and modify the env vars below in .env if HTTPS_ENABLED is true.
      NGINX_SSL_CERT_FILENAME: ${NGINX_SSL_CERT_FILENAME:-dify.crt***REMOVED***
      NGINX_SSL_CERT_KEY_FILENAME: ${NGINX_SSL_CERT_KEY_FILENAME:-dify.key***REMOVED***
      NGINX_SSL_PROTOCOLS: ${NGINX_SSL_PROTOCOLS:-TLSv1.1 TLSv1.2 TLSv1.3***REMOVED***
      NGINX_WORKER_PROCESSES: ${NGINX_WORKER_PROCESSES:-auto***REMOVED***
      NGINX_CLIENT_MAX_BODY_SIZE: ${NGINX_CLIENT_MAX_BODY_SIZE:-15M***REMOVED***
      NGINX_KEEPALIVE_TIMEOUT: ${NGINX_KEEPALIVE_TIMEOUT:-65***REMOVED***
      NGINX_PROXY_READ_TIMEOUT: ${NGINX_PROXY_READ_TIMEOUT:-3600s***REMOVED***
      NGINX_PROXY_SEND_TIMEOUT: ${NGINX_PROXY_SEND_TIMEOUT:-3600s***REMOVED***
      NGINX_ENABLE_CERTBOT_CHALLENGE: ${NGINX_ENABLE_CERTBOT_CHALLENGE:-false***REMOVED***
      CERTBOT_DOMAIN: ${CERTBOT_DOMAIN:-***REMOVED***
    depends_on:
      - api
      - web
    ports:
      - '18000:${NGINX_PORT:-80***REMOVED***'
      - '${EXPOSE_NGINX_SSL_PORT:-443***REMOVED***:${NGINX_SSL_PORT:-443***REMOVED***'

  # The Weaviate vector store.
  weaviate:
    image: semitechnologies/weaviate:1.19.0
    profiles:
      - ''
      - weaviate
    restart: always
    volumes:
      # Mount the Weaviate data directory to the con tainer.
      - ./volumes/weaviate:/var/lib/weaviate
    environment:
      # The Weaviate configurations
      # You can refer to the [Weaviate](https://weaviate.io/developers/weaviate/config-refs/env-vars***REMOVED*** documentation for more information.
      PERSISTENCE_DATA_PATH: ${WEAVIATE_PERSISTENCE_DATA_PATH:-/var/lib/weaviate***REMOVED***
      QUERY_DEFAULTS_LIMIT: ${WEAVIATE_QUERY_DEFAULTS_LIMIT:-25***REMOVED***
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: ${WEAVIATE_AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED:-false***REMOVED***
      DEFAULT_VECTORIZER_MODULE: ${WEAVIATE_DEFAULT_VECTORIZER_MODULE:-none***REMOVED***
      CLUSTER_HOSTNAME: ${WEAVIATE_CLUSTER_HOSTNAME:-node1***REMOVED***
      AUTHENTICATION_APIKEY_ENABLED: ${WEAVIATE_AUTHENTICATION_APIKEY_ENABLED:-true***REMOVED***
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_AUTHENTICATION_APIKEY_ALLOWED_KEYS:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih***REMOVED***
      AUTHENTICATION_APIKEY_USERS: ${WEAVIATE_AUTHENTICATION_APIKEY_USERS:-hello@dify.ai***REMOVED***
      AUTHORIZATION_ADMINLIST_ENABLED: ${WEAVIATE_AUTHORIZATION_ADMINLIST_ENABLED:-true***REMOVED***
      AUTHORIZATION_ADMINLIST_USERS: ${WEAVIATE_AUTHORIZATION_ADMINLIST_USERS:-hello@dify.ai***REMOVED***

  # Qdrant vector store.
  # (if used, you need to set VECTOR_STORE to qdrant in the api & worker service.***REMOVED***
  qdrant:
    image: langgenius/qdrant:v1.7.3
    profiles:
      - qdrant
    restart: always
    volumes:
      - ./volumes/qdrant:/qdrant/storage
    environment:
      QDRANT_API_KEY: ${QDRANT_API_KEY:-difyai123456***REMOVED***

  # The Couchbase vector store.
  couchbase-server:
    build: ./couchbase-server
    profiles:
      - couchbase
    restart: always
    environment:
      - CLUSTER_NAME=dify_search
      - COUCHBASE_ADMINISTRATOR_USERNAME=${COUCHBASE_USER:-Administrator***REMOVED***
      - COUCHBASE_ADMINISTRATOR_PASSWORD=${COUCHBASE_PASSWORD:-password***REMOVED***
      - COUCHBASE_BUCKET=${COUCHBASE_BUCKET_NAME:-Embeddings***REMOVED***
      - COUCHBASE_BUCKET_RAMSIZE=512
      - COUCHBASE_RAM_SIZE=2048
      - COUCHBASE_EVENTING_RAM_SIZE=512
      - COUCHBASE_INDEX_RAM_SIZE=512
      - COUCHBASE_FTS_RAM_SIZE=1024
    hostname: couchbase-server
    container_name: couchbase-server
    working_dir: /opt/couchbase
    stdin_open: true
    tty: true
    entrypoint: [ "" ]
    command: sh -c "/opt/couchbase/init/init-cbserver.sh"
    volumes:
      - ./volumes/couchbase/data:/opt/couchbase/var/lib/couchbase/data
    healthcheck:
      # ensure bucket was created before proceeding
      test: [ "CMD-SHELL", "curl -s -f -u Administrator:password http://localhost:8091/pools/default/buckets | grep -q '\\[{' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 10s

  # The pgvector vector database.
  pgvector:
    image: pgvector/pgvector:pg16
    profiles:
      - pgvector
    restart: always
    environment:
      PGUSER: ${PGVECTOR_PGUSER:-postgres***REMOVED***
      # The password for the default postgres user.
      POSTGRES_PASSWORD: ${PGVECTOR_POSTGRES_PASSWORD:-difyai123456***REMOVED***
      # The name of the default postgres database.
      POSTGRES_DB: ${PGVECTOR_POSTGRES_DB:-dify***REMOVED***
      # postgres data directory
      PGDATA: ${PGVECTOR_PGDATA:-/var/lib/postgresql/data/pgdata***REMOVED***
      # pg_bigm module for full text search
      PG_BIGM: ${PGVECTOR_PG_BIGM:-false***REMOVED***
      PG_BIGM_VERSION: ${PGVECTOR_PG_BIGM_VERSION:-1.2-20240606***REMOVED***
    volumes:
      - ./volumes/pgvector/data:/var/lib/postgresql/data
      - ./pgvector/docker-entrypoint.sh:/docker-entrypoint.sh
    entrypoint: [ '/docker-entrypoint.sh' ]
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 1s
      timeout: 3s
      retries: 30

  # pgvecto-rs vector store
  pgvecto-rs:
    image: tensorchord/pgvecto-rs:pg16-v0.3.0
    profiles:
      - pgvecto-rs
    restart: always
    environment:
      PGUSER: ${PGVECTOR_PGUSER:-postgres***REMOVED***
      # The password for the default postgres user.
      POSTGRES_PASSWORD: ${PGVECTOR_POSTGRES_PASSWORD:-difyai123456***REMOVED***
      # The name of the default postgres database.
      POSTGRES_DB: ${PGVECTOR_POSTGRES_DB:-dify***REMOVED***
      # postgres data directory
      PGDATA: ${PGVECTOR_PGDATA:-/var/lib/postgresql/data/pgdata***REMOVED***
    volumes:
      - ./volumes/pgvecto_rs/data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 1s
      timeout: 3s
      retries: 30

  # Chroma vector database
  chroma:
    image: ghcr.io/chroma-core/chroma:0.5.20
    profiles:
      - chroma
    restart: always
    volumes:
      - ./volumes/chroma:/chroma/chroma
    environment:
      CHROMA_SERVER_AUTHN_CREDENTIALS: ${CHROMA_SERVER_AUTHN_CREDENTIALS:-difyai123456***REMOVED***
      CHROMA_SERVER_AUTHN_PROVIDER: ${CHROMA_SERVER_AUTHN_PROVIDER:-chromadb.auth.token_authn.TokenAuthenticationServerProvider***REMOVED***
      IS_PERSISTENT: ${CHROMA_IS_PERSISTENT:-TRUE***REMOVED***

  # OceanBase vector database
  oceanbase:
    image: quay.io/oceanbase/oceanbase-ce:4.3.3.0-100000142024101215
    profiles:
      - oceanbase
    restart: always
    volumes:
      - ./volumes/oceanbase/data:/root/ob
      - ./volumes/oceanbase/conf:/root/.obd/cluster
      - ./volumes/oceanbase/init.d:/root/boot/init.d
    environment:
      OB_MEMORY_LIMIT: ${OCEANBASE_MEMORY_LIMIT:-6G***REMOVED***
      OB_SYS_PASSWORD: ${OCEANBASE_VECTOR_PASSWORD:-difyai123456***REMOVED***
      OB_TENANT_PASSWORD: ${OCEANBASE_VECTOR_PASSWORD:-difyai123456***REMOVED***
      OB_CLUSTER_NAME: ${OCEANBASE_CLUSTER_NAME:-difyai***REMOVED***
      OB_SERVER_IP: '127.0.0.1'

  # Oracle vector database
  oracle:
    image: container-registry.oracle.com/database/free:latest
    profiles:
      - oracle
    restart: always
    volumes:
      - source: oradata
        type: volume
        target: /opt/oracle/oradata
      - ./startupscripts:/opt/oracle/scripts/startup
    environment:
      ORACLE_PWD: ${ORACLE_PWD:-Dify123456***REMOVED***
      ORACLE_CHARACTERSET: ${ORACLE_CHARACTERSET:-AL32UTF8***REMOVED***

  # Milvus vector database services
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    profiles:
      - milvus
    environment:
      ETCD_AUTO_COMPACTION_MODE: ${ETCD_AUTO_COMPACTION_MODE:-revision***REMOVED***
      ETCD_AUTO_COMPACTION_RETENTION: ${ETCD_AUTO_COMPACTION_RETENTION:-1000***REMOVED***
      ETCD_QUOTA_BACKEND_BYTES: ${ETCD_QUOTA_BACKEND_BYTES:-4294967296***REMOVED***
      ETCD_SNAPSHOT_COUNT: ${ETCD_SNAPSHOT_COUNT:-50000***REMOVED***
    volumes:
      - ./volumes/milvus/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ 'CMD', 'etcdctl', 'endpoint', 'health' ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    profiles:
      - milvus
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin***REMOVED***
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin***REMOVED***
    volumes:
      - ./volumes/milvus/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live' ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.0-beta
    profiles:
      - milvus
    command: [ 'milvus', 'run', 'standalone' ]
    environment:
      ETCD_ENDPOINTS: ${ETCD_ENDPOINTS:-etcd:2379***REMOVED***
      MINIO_ADDRESS: ${MINIO_ADDRESS:-minio:9000***REMOVED***
      common.security.authorizationEnabled: ${MILVUS_AUTHORIZATION_ENABLED:-true***REMOVED***
    volumes:
      - ./volumes/milvus/milvus:/var/lib/milvus
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9091/healthz' ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    depends_on:
      - etcd
      - minio
    ports:
      - 19530:19530
      - 9091:9091
    networks:
      - milvus

  # Opensearch vector database
  opensearch:
    container_name: opensearch
    image: opensearchproject/opensearch:latest
    profiles:
      - opensearch
    environment:
      discovery.type: ${OPENSEARCH_DISCOVERY_TYPE:-single-node***REMOVED***
      bootstrap.memory_lock: ${OPENSEARCH_BOOTSTRAP_MEMORY_LOCK:-true***REMOVED***
      OPENSEARCH_JAVA_OPTS: -Xms${OPENSEARCH_JAVA_OPTS_MIN:-512m***REMOVED*** -Xmx${OPENSEARCH_JAVA_OPTS_MAX:-1024m***REMOVED***
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD:-Qazwsxedc!@#123***REMOVED***
    ulimits:
      memlock:
        soft: ${OPENSEARCH_MEMLOCK_SOFT:--1***REMOVED***
        hard: ${OPENSEARCH_MEMLOCK_HARD:--1***REMOVED***
      nofile:
        soft: ${OPENSEARCH_NOFILE_SOFT:-65536***REMOVED***
        hard: ${OPENSEARCH_NOFILE_HARD:-65536***REMOVED***
    volumes:
      - ./volumes/opensearch/data:/usr/share/opensearch/data
    networks:
      - opensearch-net

  opensearch-dashboards:
    container_name: opensearch-dashboards
    image: opensearchproject/opensearch-dashboards:latest
    profiles:
      - opensearch
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
    volumes:
      - ./volumes/opensearch/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
    networks:
      - opensearch-net
    depends_on:
      - opensearch

  # opengauss vector database.
  opengauss:
    image: opengauss/opengauss:7.0.0-RC1
    profiles:
      - opengauss
    privileged: true
    restart: always
    environment:
      GS_USERNAME: ${OPENGAUSS_USER:-postgres***REMOVED***
      GS_PASSWORD: ${OPENGAUSS_PASSWORD:-Dify@123***REMOVED***
      GS_PORT: ${OPENGAUSS_PORT:-6600***REMOVED***
      GS_DB: ${OPENGAUSS_DATABASE:-dify***REMOVED***
    volumes:
      - ./volumes/opengauss/data:/var/lib/opengauss/data
    healthcheck:
      test: ["CMD-SHELL", "netstat -lntp | grep tcp6 > /dev/null 2>&1"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - ${OPENGAUSS_PORT:-6600***REMOVED***:${OPENGAUSS_PORT:-6600***REMOVED***

  # MyScale vector database
  myscale:
    container_name: myscale
    image: myscale/myscaledb:1.6.4
    profiles:
      - myscale
    restart: always
    tty: true
    volumes:
      - ./volumes/myscale/data:/var/lib/clickhouse
      - ./volumes/myscale/log:/var/log/clickhouse-server
      - ./volumes/myscale/config/users.d/custom_users_config.xml:/etc/clickhouse-server/users.d/custom_users_config.xml
    ports:
      - ${MYSCALE_PORT:-8123***REMOVED***:${MYSCALE_PORT:-8123***REMOVED***

  # https://www.elastic.co/guide/en/elasticsearch/reference/current/settings.html
  # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-prod-prerequisites
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch
    profiles:
      - elasticsearch
      - elasticsearch-ja
    restart: always
    volumes:
      - ./elasticsearch/docker-entrypoint.sh:/docker-entrypoint-mount.sh
      - dify_es01_data:/usr/share/elasticsearch/data
    environment:
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD:-elastic***REMOVED***
      VECTOR_STORE: ${VECTOR_STORE:-***REMOVED***
      cluster.name: dify-es-cluster
      node.name: dify-es0
      discovery.type: single-node
      xpack.license.self_generated.type: basic
      xpack.security.enabled: 'true'
      xpack.security.enrollment.enabled: 'false'
      xpack.security.http.ssl.enabled: 'false'
    ports:
      - ${ELASTICSEARCH_PORT:-9200***REMOVED***:9200
    deploy:
      resources:
        limits:
          memory: 2g
    entrypoint: [ 'sh', '-c', "sh /docker-entrypoint-mount.sh" ]
    healthcheck:
      test: [ 'CMD', 'curl', '-s', 'http://localhost:9200/_cluster/health?pretty' ]
      interval: 30s
      timeout: 10s
      retries: 50

  # https://www.elastic.co/guide/en/kibana/current/docker.html
  # https://www.elastic.co/guide/en/kibana/current/settings.html
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana
    profiles:
      - elasticsearch
    depends_on:
      - elasticsearch
    restart: always
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
      NO_PROXY: localhost,127.0.0.1,elasticsearch,kibana
      XPACK_SECURITY_ENABLED: 'true'
      XPACK_SECURITY_ENROLLMENT_ENABLED: 'false'
      XPACK_SECURITY_HTTP_SSL_ENABLED: 'false'
      XPACK_FLEET_ISAIRGAPPED: 'true'
      I18N_LOCALE: zh-CN
      SERVER_PORT: '5601'
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - ${KIBANA_PORT:-5601***REMOVED***:5601
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -s http://localhost:5601 >/dev/null || exit 1' ]
      interval: 30s
      timeout: 10s
      retries: 3

  # unstructured .
  # (if used, you need to set ETL_TYPE to Unstructured in the api & worker service.***REMOVED***
  unstructured:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:latest
    profiles:
      - unstructured
    restart: always
    volumes:
      - ./volumes/unstructured:/app/data

networks:
  # create a network between sandbox, api and ssrf_proxy, and can not access outside.
  ssrf_proxy_network:
    driver: bridge
    internal: true
  milvus:
    driver: bridge
  opensearch-net:
    driver: bridge
    internal: true

volumes:
  oradata:
  dify_es01_data:
